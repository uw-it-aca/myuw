# This file provides preconfigured containers to run tests
# in a development environment
#
# How to use this:
# docker-compose -f docker-compose.dev.yml run (django-test|eslint-fix|eslint|jest) 
#
# You can also run a command in the container by using:
# docker-compose -f docker-compose.dev.yml run <service-name> <command>

version: '3.4'

services:
  python-tests:
    build: .
    user: root
    volumes:
      - ./myuw:/app/myuw
      - /tmp/myuw:/coverage
    environment:
      ENV: localdev
      AUTH: SAML_MOCK
      DJANGO_APP: "myuw"
      MEMCACHED_SERVER_COUNT: 1
      MEMCACHED_SERVER_SPEC: memcached
    depends_on:
      - memcached
    stdin_open: true
    tty: true
    command: bash -c ". ./docker/test_python.sh"
  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
        - "11211:11211"
    expose:
      - "11211"
  eslint:
    build:
      context: .
      dockerfile: Dockerfile.cypress
    environment:
      NODE_ENV: production
      ENV: localdev
    volumes:
      - ./myuw:/app/myuw
      - ./myuw_vue:/app/myuw_vue
    working_dir: /app/
    stdin_open: true
    tty: true
    entrypoint:
      - ./node_modules/.bin/eslint
      - myuw_vue
      - --ext
      - .vue
  jest:
    build:
      context: .
      dockerfile: Dockerfile.cypress
    environment:
      NODE_ENV: production
      ENV: localdev
    volumes:
      - ./myuw:/app/myuw
      - ./myuw_vue:/app/myuw_vue
    working_dir: /app/
    stdin_open: true
    tty: true
    entrypoint:
      - ./node_modules/.bin/jest
  cypress:
    build:
      context: .
      dockerfile: Dockerfile.cypress
    environment:
      NODE_ENV: production
      ENV: localdev
    volumes:
      - ./myuw:/app/myuw
      - ./myuw_vue:/app/myuw_vue
      - ./cypress:/app/cypress
    working_dir: /app/
    stdin_open: true
    tty: true
    entrypoint:
      - ./node_modules/.bin/cypress
      - run-ct
